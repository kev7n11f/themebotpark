name: Deploy to Vercel
permissions:
  contents: read

on:
  push:
    branches:
      - main

env:
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Check required Vercel secrets
        run: |
          if [ -z "$VERCEL_ORG_ID" ] || [ -z "$VERCEL_PROJECT_ID" ]; then
            echo "‚ùå Missing VERCEL_ORG_ID or VERCEL_PROJECT_ID secret."
            echo "Please set these secrets in your repository settings:"
            echo "- VERCEL_ORG_ID: Your Vercel organization ID"
            echo "- VERCEL_PROJECT_ID: Your Vercel project ID"
            echo "You can find these values in your Vercel project settings."
            exit 1
          fi
          echo "‚úÖ Vercel secrets are properly configured"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Build project
        run: npm run build
        env:
          CI: false # Treat warnings as warnings, not errors
          NODE_OPTIONS: --openssl-legacy-provider

      - name: Run security audit
        run: npm audit --audit-level high
        continue-on-error: true # Don't fail the build on audit issues

      - name: Deploy to Vercel
        id: deploy
        run: |
          npx vercel --prod --yes --token ${{ secrets.VERCEL_TOKEN }}
          echo "::set-output name=url::$(npx vercel --token ${{ secrets.VERCEL_TOKEN }} ls | grep -E 'https://.*\.vercel\.app' | head -1 | awk '{print $1}')"

      - name: Health check after deployment
        run: |
          # Wait for deployment to be ready
          sleep 30
          
          # Try to get the deployment URL from Vercel CLI
          DEPLOY_URL="${{ steps.deploy.outputs.url }}"
          if [ -z "$DEPLOY_URL" ]; then
            DEPLOY_URL="https://themebotpark.vercel.app"
          fi
          
          echo "Checking health of: $DEPLOY_URL"
          
          # Health check with retries
          for i in {1..5}; do
            if curl -f -s "$DEPLOY_URL/health" > /dev/null; then
              echo "‚úÖ Health check passed"
              curl -s "$DEPLOY_URL/health" | jq .
              break
            else
              echo "‚ö†Ô∏è  Health check failed (attempt $i/5)"
              if [ $i -eq 5 ]; then
                echo "‚ùå Health check failed after 5 attempts"
                exit 1
              fi
              sleep 10
            fi
          done

      - name: Test critical endpoints
        run: |
          DEPLOY_URL="https://themebotpark.vercel.app"
          
          echo "Testing critical endpoints..."
          
          # Test main page
          if curl -f -s "$DEPLOY_URL" > /dev/null; then
            echo "‚úÖ Main page accessible"
          else
            echo "‚ùå Main page not accessible"
            exit 1
          fi
          
          # Test API endpoints
          if curl -f -s "$DEPLOY_URL/api/chat" > /dev/null; then
            echo "‚úÖ Chat API accessible"
          else
            echo "‚ùå Chat API not accessible"
          fi

      - name: Performance check
        run: |
          DEPLOY_URL="https://themebotpark.vercel.app"
          
          echo "Running basic performance check..."
          
          # Measure load time
          START_TIME=$(date +%s%N)
          curl -f -s -o /dev/null "$DEPLOY_URL"
          END_TIME=$(date +%s%N)
          
          LOAD_TIME_MS=$(( ($END_TIME - $START_TIME) / 1000000 ))
          echo "Page load time: ${LOAD_TIME_MS}ms"
          
          if [ $LOAD_TIME_MS -gt 5000 ]; then
            echo "‚ö†Ô∏è  Warning: Page load time is slow (${LOAD_TIME_MS}ms)"
          else
            echo "‚úÖ Page load time is acceptable"
          fi

      - name: Deployment summary
        run: |
          echo "üéâ Deployment completed successfully!"
          echo "üåê URL: https://themebotpark.vercel.app"
          echo "üè• Health: https://themebotpark.vercel.app/health"
          echo "üìä Metrics: https://themebotpark.vercel.app/metrics"
